image: golang:latest

stages:
  - test
  - analysis

before_script:
  - cd ${CI_PROJECT_DIR}

test:
  stage: test
  retry: 2
  script:
    - go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
  artifacts:
    paths:
      - coverage.txt

sonarcloud-scan:
  stage: analysis
  image: docker:stable
  allow_failure: true
  services:
    - docker:stable-dind
  dependencies:
    - test
  script:
    >-
      docker run \
        -v $(pwd):/root/src \
        -v $(pwd)/test/sonar-scanner.properties:/root/sonar-scanner/conf/sonar-scanner.properties \
        newtmitch/sonar-scanner sonar-scanner \
        -Dsonar.branch.name=${CI_COMMIT_REF_SLUG} \
        -Dsonar.login=${SONARCLOUD_LOGIN}

analysis:
  stage: analysis
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  only:
    - master
    - develop
    - schedules
  artifacts:
    reports:
      sast: gl-sast-report.json
      